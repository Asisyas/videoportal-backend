<?php

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: personage.proto

namespace App\Shared\Transfer\Personage;

use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>transfer.personage.PersonageTransfer</code>.
 */
class PersonageTransfer extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string nickname = 1;</code>.
     */
    protected $nickname = '';
    /**
     * Generated from protobuf field <code>int32 level = 2;</code>.
     */
    protected $level = 0;
    /**
     * Generated from protobuf field <code>.transfer.personage.StatsTransfer stats = 3;</code>.
     */
    protected $stats;
    /**
     * Generated from protobuf field <code>.transfer.personage.BattleCounterTransfer battles = 4;</code>.
     */
    protected $battles;
    /**
     * Generated from protobuf field <code>.transfer.personage.ExperienceTransfer experience = 5;</code>.
     */
    protected $experience;

    /**
     * Constructor.
     *
     * @param array $data {
     *                    Optional. Data for populating the Message object.
     *
     * @var string                $nickname
     * @var int                   $level
     * @var StatsTransfer         $stats
     * @var BattleCounterTransfer $battles
     * @var ExperienceTransfer    $experience
     *                            }
     */
    public function __construct($data = null)
    {
        \App\Shared\GPBMetadata\Personage::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string nickname = 1;</code>.
     *
     * @return string
     */
    public function getNickname()
    {
        return $this->nickname;
    }

    /**
     * Generated from protobuf field <code>string nickname = 1;</code>.
     *
     * @param string $var
     *
     * @return $this
     */
    public function setNickname($var)
    {
        GPBUtil::checkString($var, true);
        $this->nickname = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 level = 2;</code>.
     *
     * @return int
     */
    public function getLevel()
    {
        return $this->level;
    }

    /**
     * Generated from protobuf field <code>int32 level = 2;</code>.
     *
     * @param int $var
     *
     * @return $this
     */
    public function setLevel($var)
    {
        GPBUtil::checkInt32($var);
        $this->level = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.transfer.personage.StatsTransfer stats = 3;</code>.
     *
     * @return StatsTransfer|null
     */
    public function getStats()
    {
        return $this->stats;
    }

    public function hasStats()
    {
        return isset($this->stats);
    }

    public function clearStats()
    {
        unset($this->stats);
    }

    /**
     * Generated from protobuf field <code>.transfer.personage.StatsTransfer stats = 3;</code>.
     *
     * @param StatsTransfer $var
     *
     * @return $this
     */
    public function setStats($var)
    {
        GPBUtil::checkMessage($var, StatsTransfer::class);
        $this->stats = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.transfer.personage.BattleCounterTransfer battles = 4;</code>.
     *
     * @return BattleCounterTransfer|null
     */
    public function getBattles()
    {
        return $this->battles;
    }

    public function hasBattles()
    {
        return isset($this->battles);
    }

    public function clearBattles()
    {
        unset($this->battles);
    }

    /**
     * Generated from protobuf field <code>.transfer.personage.BattleCounterTransfer battles = 4;</code>.
     *
     * @param BattleCounterTransfer $var
     *
     * @return $this
     */
    public function setBattles($var)
    {
        GPBUtil::checkMessage($var, BattleCounterTransfer::class);
        $this->battles = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.transfer.personage.ExperienceTransfer experience = 5;</code>.
     *
     * @return ExperienceTransfer|null
     */
    public function getExperience()
    {
        return $this->experience;
    }

    public function hasExperience()
    {
        return isset($this->experience);
    }

    public function clearExperience()
    {
        unset($this->experience);
    }

    /**
     * Generated from protobuf field <code>.transfer.personage.ExperienceTransfer experience = 5;</code>.
     *
     * @param ExperienceTransfer $var
     *
     * @return $this
     */
    public function setExperience($var)
    {
        GPBUtil::checkMessage($var, ExperienceTransfer::class);
        $this->experience = $var;

        return $this;
    }
}
